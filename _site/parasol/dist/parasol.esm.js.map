{"version":3,"file":"parasol.esm.js","sources":["../src/api/init.js","../src/util/as_float.js","../src/api/attachGrid.js","../src/api/gridUpdate.js","../src/api/sync.js","../src/api/linked.js","../src/util/wrangle.js","../src/util/arr_stats.js","../src/util/standardize.js","../src/util/format_data.js","../src/util/add_column.js","../src/api/cluster.js","../src/util/normalize.js","../src/api/weightedSum.js","../src/api/hideAxes.js","../src/api/showAxes.js","../src/api/setAxesLayout.js","../src/api/keepData.js","../src/api/removeData.js","../node_modules/file-saver/FileSaver.js","../src/api/exportData.js","../src/api/resetSelections.js","../src/wrap/alpha.js","../src/wrap/color.js","../src/wrap/alphaOnBrushed.js","../src/wrap/brushedColor.js","../src/wrap/reorderable.js","../src/wrap/composite.js","../src/wrap/shadows.js","../src/wrap/mark.js","../src/wrap/highlight.js","../src/wrap/dimensions.js","../src/wrap/flipAxes.js","../src/wrap/scale.js","../src/wrap/bundleDimension.js","../src/wrap/bundlingStrength.js","../src/wrap/smoothness.js","../src/wrap/render.js","../src/wrap/brushReset.js","../src/wrap/unmark.js","../src/wrap/unhighlight.js","../src/state/defaultConfig.js","../src/state/initState.js","../src/index.js"],"sourcesContent":["import { selectAll } from 'd3';\nimport ParCoords from 'parcoord-es';\n\n/**\n * Setup a new visualization.\n *\n * @param config\n * @returns {ps} a parasol closure\n */\nconst init = config => {\n  /**\n   * Create a visualization within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {ps} instance for chained api, compatible with parcoords api\n   */\n  const ps = function(selection) {\n    selection = ps.selection = selectAll(selection);\n\n    // store pc charts in array\n    ps.charts = [];\n    selection.each(function(d, i) {\n      ps.charts[i] = ParCoords(config.chartOptions)(this)\n        .data(config.data)\n        .hideAxis(['id'])\n        .alpha(0.4)\n        .render()\n        .mode('queue')\n        .brushMode('1D-axes'); //1D-axes must be used with linking\n\n      // add \"id\" to partition globally\n      config.partition[i] = ['id'];\n    });\n\n    // for chained api\n    return ps;\n  };\n  // for partial-application style programming\n  return ps;\n};\n\nexport default init;\n","const as_float = x => {\n  const converted = parseFloat(x);\n  return isNaN(converted) ? x : converted;\n};\n\nexport default as_float;\n","import SlickGrid from 'slickgrid-es6';\nimport { difference } from 'lodash-es';\n\nimport as_float from '../util/as_float';\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {string} container:   DOM element in which grid will be placed.\n * @param {array}  columns:    An array of column definitions (objects).\n * @param {object} options:     SlickGrid options.\n **/\nconst attachGrid = (config, ps, flags) =>\n  function({ container, columns = null, options = null }) {\n    flags.grid = true;\n\n    const checkboxSelector = new SlickGrid.Plugins.CheckboxSelectColumn({\n      cssClass: 'slick-cell-checkboxsel',\n    });\n\n    if (columns === null) {\n      // place id col on left\n      let column_keys = config.vars;\n      column_keys = difference(column_keys, ['id']);\n      // NOTE: remove line below to remove id col from grid\n      column_keys.unshift('id');\n\n      columns = column_keys.map((key, i) => ({\n        id: key,\n        name: key,\n        field: key,\n        sortable: true,\n      }));\n      columns.unshift(checkboxSelector.getColumnDefinition());\n    }\n\n    if (options === null) {\n      options = {\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        multiColumnSort: false,\n        editable: true,\n        asyncEditorLoading: false,\n        autoEdit: false,\n      };\n    }\n\n    // initialize\n    config.dataView = new SlickGrid.Data.DataView();\n    config.dataView.setItems(config.data);\n    config.grid = new SlickGrid.Grid(\n      container,\n      config.dataView,\n      columns,\n      options\n    );\n\n    config.grid.setSelectionModel(\n      new SlickGrid.Plugins.RowSelectionModel({ selectActiveRow: false })\n    );\n    config.grid.registerPlugin(checkboxSelector);\n\n    // wire up model events to drive the grid\n    config.dataView.onRowCountChanged.subscribe((e, args) => {\n      config.grid.updateRowCount();\n      config.grid.render();\n    });\n\n    config.dataView.onRowsChanged.subscribe((e, args) => {\n      config.grid.invalidateRows(args.rows);\n      config.grid.render();\n    });\n\n    // keep checkboxes matched with row on update\n    config.dataView.syncGridSelection(config.grid);\n\n    // column sorting\n    let sortcol = columns.map(c => c.name);\n    sortcol.shift();\n    let sortdir = 1;\n\n    const comparer = (a, b) => {\n      const x = as_float(a[sortcol]);\n      const y = as_float(b[sortcol]);\n      return x == y ? 0 : x > y ? 1 : -1;\n    };\n\n    // click header to sort grid column\n    config.grid.onSort.subscribe((e, args) => {\n      sortdir = args.sortAsc ? 1 : -1;\n      sortcol = args.sortCol.field;\n\n      config.dataView.sort(comparer, args.sortAsc);\n    });\n\n    return this;\n  };\n\nexport default attachGrid;\n","import { union } from 'lodash-es';\nimport as_float from '../util/as_float';\n\n/**\n * Update data displayed in grid.\n * @param {array}  data:    array of objects.\n * @param {array} columns:  column definitions.\n **/\nconst gridUpdate = (config, ps, flags) =>\n  function({ data = null, columns = null } = {}) {\n    if (columns !== null) {\n      config.grid.setColumns(columns);\n      config.grid.render();\n    }\n    if (data === null) {\n      data = config.selections();\n      if (data.length === 0) {\n        // if selections empty, use full dataset\n        data = config.data;\n      }\n    }\n    // if marked data exists, keep in grid\n    if (config.marked.length) {\n      data = union(data, config.marked);\n    }\n\n    const comparer = (a, b) => {\n      const x = as_float(a['id']);\n      const y = as_float(b['id']);\n      return x == y ? 0 : x > y ? 1 : -1;\n    };\n\n    config.dataView.beginUpdate();\n    config.dataView.setItems(data);\n    config.dataView.sort(comparer, true);\n    config.dataView.endUpdate();\n\n    return this;\n  };\n\nexport default gridUpdate;\n","import { union, intersection } from 'lodash-es';\n\n// synchronize data between linked components\nconst sync = (config, ps, flags) =>\n  function() {\n    //obtain array of brushed data for each chart\n    const brush_extents = [];\n    ps.linked.forEach(pc => {\n      brush_extents.push(pc.selected());\n    });\n\n    //check edge case where all brushes individually clicked away\n    if (union(...brush_extents).length == 0) {\n      ps.linked.forEach(pc => {\n        pc.brushReset();\n      });\n      config.brushed = [];\n      // update data in grid\n      if (flags.grid) {\n        ps.gridUpdate(config.data);\n      }\n    } else {\n      const brushed = intersection(...brush_extents);\n      ps.linked.forEach(pc => {\n        pc.brushed(brushed).render();\n      });\n\n      // NOTE: once pc.selected issue fixed, remove if statement and uncomment line below\n      //config.brushed = brushed;\n      if (brushed.length < config.data.length) {\n        config.brushed = brushed;\n      } else {\n        config.brushed = [];\n      }\n      // update data in grid\n      // NOTE: once pc.selected fixed, remove arg from gridUpdate\n      if (flags.grid) {\n        ps.gridUpdate({ data: brushed });\n      }\n    }\n  };\n\nexport default sync;\n","import sync from './sync';\n\n/**\n * Link brush activity between specified charts, and grid if it exists.\n *\n * @param {array} chartIDs:   charts to be linked (defaults to all).\n **/\nconst linked = (config, ps, flags) =>\n  function(chartIDs = [...Array(ps.charts.length).keys()]) {\n    // force numeric type for indexing\n    chartIDs = chartIDs.map(Number);\n\n    // setup linked components\n    ps.linked = [];\n    chartIDs.forEach((i, j) => {\n      ps.linked[j] = ps.charts[i];\n    });\n\n    ps.linked.forEach(pc => {\n      pc.on('brush', sync(config, ps, flags));\n    });\n\n    // connect grid\n    if (flags.grid) {\n      // highlight row in chart\n      config.grid.onMouseEnter.subscribe((e, args) => {\n        let i = config.grid.getCellFromEvent(e).row;\n        const d = config.dataView.getItems() || config.data;\n        ps.linked.forEach(pc => {\n          pc.highlight([d[i]]);\n        });\n      });\n      config.grid.onMouseLeave.subscribe((e, args) => {\n        ps.linked.forEach(pc => {\n          pc.unhighlight();\n        });\n      });\n\n      // mark row in chart\n      config.grid.onSelectedRowsChanged.subscribe((e, args) => {\n        // reset and update selected rows\n        const selected_row_ids = config.grid.getSelectedRows();\n        const d = config.dataView.getItems() || config.data;\n        ps.linked.forEach(pc => {\n          pc.unmark();\n        });\n        selected_row_ids.forEach(i => {\n          ps.linked.forEach(pc => {\n            pc.mark([d[i]]);\n          });\n        });\n\n        // update marked data\n        config.marked = ps.linked[0].marked();\n\n        // refresh grid if brushes are applied\n        if (config.brushed.length) {\n          ps.gridUpdate();\n        }\n      });\n    }\n\n    return this;\n  };\n\nexport default linked;\n","// wrangling tools to manipulate data for processing values\n\n// d3 data is formatted as array of objects, each row is an object\n// convert to object of arrays, each array is a column\n// e.g. {\"var1\": [col1], \"var2\": [col2]}\nconst array_to_object = data =>\n  data.reduce((acc, obj) => {\n    Object.keys(obj).forEach(function(k) {\n      acc[k] = (acc[k] || []).concat(Number(obj[k]));\n    });\n    return acc;\n  }, {});\n\n// data is formatted as 'data frame' with columns as keys\n// convert back to array of objects with rows as objects\nconst object_to_array = (df, data) => {\n  var result = [];\n  Object.entries(df).forEach(([key, values]) => {\n    values.forEach((val, i) => {\n      result[i] = result[i] || {};\n      // get original string if value is NaN\n      if (isNaN(val)) {\n        result[i][key] = data[i][key];\n      } else {\n        result[i][key] = val.toString();\n      }\n    });\n  });\n  return result;\n};\n\nexport { array_to_object, object_to_array };\n","// inspired by: https://gist.github.com/Daniel-Hug/7273430\nconst arr = {\n  max: function(array) {\n    return Math.max.apply(null, array);\n  },\n\n  min: function(array) {\n    return Math.min.apply(null, array);\n  },\n\n  range: function(array) {\n    return arr.max(array) - arr.min(array);\n  },\n\n  extents: function(array) {\n    return [arr.min(array), arr.max(array)];\n  },\n\n  sum: function(array) {\n    let num = 0;\n    for (let i = 0, l = array.length; i < l; i++) num += array[i];\n    return num;\n  },\n\n  mean: function(array) {\n    return arr.sum(array) / array.length;\n  },\n\n  variance: function(array) {\n    const mean = arr.mean(array);\n    return arr.mean(\n      array.map(function(num) {\n        return Math.pow(num - mean, 2);\n      })\n    );\n  },\n\n  standardDeviation: function(array) {\n    return Math.sqrt(arr.variance(array));\n  },\n\n  zScores: function(array) {\n    const mean = arr.mean(array);\n    const standardDeviation = arr.standardDeviation(array);\n    return array.map(function(num) {\n      return (num - mean) / standardDeviation;\n    });\n  },\n\n  norms: function(array) {\n    const extents = arr.extents(array);\n    return array.map(function(num) {\n      return (num - extents[0]) / (extents[1] - extents[0]);\n    });\n  },\n};\n\nexport default arr;\n","import { array_to_object, object_to_array } from './wrangle';\nimport arr from './arr_stats';\n\n// convert values to zscores\nconst standardize = data => {\n  // reformat data\n  const df = array_to_object(data);\n\n  // standardize values\n  Object.keys(df).forEach(key => {\n    df[key] = arr.zScores(df[key]);\n  });\n\n  // convert back to original data type\n  return object_to_array(df, data);\n};\n\nexport default standardize;\n","// format data values as strings\n// const parcoords_format = d => {\n// \td.forEach(\n// \t\t(d_obj) => {\n// \t\t\tObject.entries(d_obj).forEach(\n// \t\t\t\t([key, value]) =>  {\n// \t\t\t\t\td_obj[key] = value.toString();\n// \t\t\t\t});\n// \t\t});\n// };\nimport { csvFormat, csvParse } from 'd3-dsv';\n\nconst format_data = data => csvParse(csvFormat(data));\n\nexport default format_data;\n","import { includes } from 'lodash-es';\n// add column defintion to grid columns\nconst add_column = (columns, col_name) => {\n  // ignore repeats\n  const names = columns.map(col => col.name);\n  if (includes(names, col_name)) {\n    return columns;\n  } else {\n    const col_def = {\n      id: col_name,\n      name: col_name,\n      field: col_name,\n      sortable: true,\n    };\n    columns.push(col_def);\n    return columns;\n  }\n};\nexport default add_column;\n","import kmeans from 'ml-kmeans';\nimport { scaleOrdinal, schemeCategory10 } from 'd3';\n\nimport standardize from '../util/standardize';\nimport format_data from '../util/format_data';\nimport add_column from '../util/add_column';\n\n/**\n * Partition data into k clusters in which each data element belongs to\n * the cluster with the nearest mean.\n *\n * @param {int} k: number of clusters\n * @param {array} displayIDs: charts that will display cluster colors\n * @param {} palette: d3 palette or function mapping cluster ids to color\n * @param {array} vars: variables used for clustering. NOTE: associated data must be numeric\n * @param {object} options: ml-kmeans options\n * @param {bool} std: convert values to zscores to obtain unbiased clusters\n * @param {bool} hidden: determines whether cluster axis will be displayed on charts (can be individually updated with hideAxis later)\n */\nconst cluster = (config, ps, flags) =>\n  function({\n    k = 3,\n    vars = config.vars,\n    displayIDs = [...Array(ps.charts.length).keys()],\n    palette = schemeCategory10,\n    options = {},\n    std = true,\n    hidden = true,\n  } = {}) {\n    if (Array.isArray(palette)) {\n      const scheme = scaleOrdinal(palette);\n      palette = d => scheme(Number(d['cluster']));\n    }\n\n    let data = [];\n    if (std === true) {\n      data = standardize(config.data);\n    } else {\n      data = config.data;\n    }\n\n    // setup object to filter variables that will be used in clustering\n    const cluster_vars = {};\n    vars.forEach(v => {\n      cluster_vars[v] = true;\n    });\n\n    // get data values in array of arrays for clustering\n    // (values from each row object captured in array)\n    const values = [];\n    data.forEach(d => {\n      const target = [];\n      Object.entries(d).forEach(([key, value]) => {\n        // only take values from variables listed in function argument\n        if (cluster_vars[key] == true) {\n          target.push(Number(value));\n        }\n      });\n      values.push(target);\n    });\n\n    // preform clustering and update config data\n    const result = kmeans(values, k, options);\n    config.data.forEach((d, i) => {\n      d.cluster = result.clusters[i].toString();\n    });\n    // console.log('kmeans++');\n    // console.log(result.iterations, result.centroids.map(c => c.error));\n    // console.log(result.centroids);\n\n    // hide cluster axis and show colors by default\n    if (hidden == true) {\n      Object.keys(config.partition).forEach(id => {\n        config.partition[id].push('cluster');\n      });\n    }\n\n    // format data, update charts\n    config.vars.push('cluster');\n    config.data = format_data(config.data);\n    ps.charts.forEach(pc => {\n      pc.data(config.data)\n        .render()\n        .createAxes();\n      // .updateAxes();\n    });\n\n    ps.charts.forEach((pc, i) => {\n      // only color charts in displayIDs\n      if (displayIDs.includes(i)) {\n        pc.color(palette);\n      }\n      pc.hideAxis(config.partition[i])\n        .render()\n        .updateAxes(0);\n    });\n\n    if (flags.grid) {\n      // add column\n      const cols = add_column(config.grid.getColumns(), 'cluster');\n      ps.gridUpdate({ columns: cols });\n    }\n\n    return this;\n  };\n\nexport default cluster;\n","import { array_to_object, object_to_array } from './wrangle';\nimport arr from './arr_stats';\n\n// normalize data values (scale: 0-1) for unbiased aggregate scores\nconst normalize = data => {\n  // reformat data\n  const df = array_to_object(data);\n\n  // normalize values\n  Object.entries(df).forEach(([key, col]) => {\n    df[key] = arr.norms(col);\n  });\n\n  // convert back to original data type\n  return object_to_array(df, data);\n};\n\nexport default normalize;\n","import normalize from '../util/normalize';\nimport format_data from '../util/format_data';\nimport arr from '../util/arr_stats';\nimport add_column from '../util/add_column';\n\n/**\n * Compute individual weighted sums for each solution based on\n * user specified weights.\n *\n * @param {object} weights: specify weight of each variable, unspecified variables will be assigned weight 0\n * @param {array} displayIDs: charts that will display 'weighted sum' variable; defaults to all charts\n * @param {bool} norm: normalize values (0-1) to obtain fair weighting\n */\nconst weightedSum = (config, ps, flags) =>\n  function({\n    weights,\n    displayIDs = [...Array(ps.charts.length).keys()],\n    norm = true,\n  }) {\n    // NOTE: if data is re-scored, old score will not affect new score unless it is given a weight itself in the 'weights' object\n\n    // force numeric type for indexing\n    displayIDs = displayIDs.map(Number);\n\n    let data = [];\n    if (norm === true) {\n      data = normalize(config.data);\n    } else {\n      data = config.data;\n    }\n\n    // compute initial weight for each data element\n    const row_totals = [];\n    data.forEach((d, i) => {\n      let d_weight = 0;\n      Object.entries(d).forEach(\n        // find cumulative sum of weight times value\n        ([key, val]) => {\n          if (weights[key]) {\n            d_weight += val * weights[key];\n          }\n        }\n      );\n      data[i].score = d_weight;\n      row_totals.push(d_weight);\n    });\n\n    // normalize all values against total weight and assign values\n    const extents = arr.extents(row_totals);\n    data.forEach((d, i) => {\n      config.data[i]['weighted sum'] = (\n        (d.score - extents[0]) /\n        (extents[1] - extents[0])\n      ).toString();\n    });\n\n    // partition scores var on charts\n    Object.keys(config.partition).forEach(i => {\n      if (!displayIDs.includes(Number(i))) {\n        // chart not in displayIDs, hidden on this chart\n        config.partition[Number(i)].push('weighted sum');\n      }\n    });\n\n    // weighted sums are ready, update data and charts\n    config.vars.push('weighted sum');\n    config.data = format_data(config.data);\n    ps.charts.forEach((pc, i) => {\n      pc.data(config.data)\n        .hideAxis(config.partition[i])\n        .render()\n        .createAxes();\n      // .updateAxes();\n    });\n    // NOTE: need to maintain current state of charts somehow\n\n    if (flags.grid) {\n      // add column\n      const cols = add_column(config.grid.getColumns(), 'weighted sum');\n      ps.gridUpdate({ columns: cols });\n    }\n\n    return this;\n  };\n\nexport default weightedSum;\n","import { isPlainObject, union } from 'lodash-es';\n\n/**\n * Hide a set of axes globally or from specific charts.\n *\n * @param partition: array or object idenifying axes to be hidden; if object, format as { chart id: [hidden vars]}\n */\nconst hideAxes = (config, ps, flags) =>\n  function(partition) {\n    if (Array.isArray(partition)) {\n      // append array to every key in config.partition\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = union(config.partition[id], partition);\n      });\n    } else if (isPlainObject(partition)) {\n      // take union of values for each key that is also in config.partition\n      Object.entries(partition).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = union(config.partition[key], partition[key]);\n        }\n      });\n    } else {\n      throw 'Error: please provide an object or array as argument.';\n    }\n\n    // iterate over partition keys and hide all variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(500);\n    });\n\n    return this;\n  };\n\nexport default hideAxes;\n","import { isPlainObject, difference } from 'lodash-es';\n\n/**\n * Show a set of axes globally or on specific charts\n *\n * @param partition: array or object idenifying axes to be shown; if object, format as { chart id: [vars to show]}\n */\nconst showAxes = (config, ps, flags) =>\n  function(partition) {\n    if (typeof partition === 'undefined') {\n      // show all axes on all charts (empty partition)\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = [];\n      });\n    } else if (Array.isArray(partition)) {\n      // remove array from every key in config.partition\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = difference(config.partition[id], partition);\n      });\n    } else if (isPlainObject(partition)) {\n      // take difference of values for each key that is also in config.partition\n      // (i.e. remove from hidden)\n      Object.entries(partition).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = difference(\n            config.partition[key],\n            partition[key]\n          );\n        }\n      });\n    } else {\n      throw 'Error: please provide an object or array as argument.';\n    }\n\n    // iterate over partition keys and hide only remaining variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(500);\n    });\n\n    return this;\n  };\n\nexport default showAxes;\n","import { isPlainObject, difference } from 'lodash-es';\n\n/**\n * Specify the axes that will appear in each chart. Default for unspecified charts is to display all axes.\n *\n * @param {object} layout:  indentify a list of axes to be shown on each chart; format as { chart id: [vars to show]}\n */\nconst setAxesLayout = (config, ps, flags) =>\n  function(layout) {\n    if (isPlainObject(layout)) {\n      // take difference of all variables and layout variables\n      // i.e. show only those which appear in both data and layout\n      Object.entries(layout).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = difference(\n            config.vars.concat('id'),\n            layout[key]\n          );\n        }\n      });\n    } else {\n      throw 'Error: please provide layout as a plain object.';\n    }\n\n    // iterate over partition keys and hide only remaining variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(0);\n    });\n\n    return this;\n  };\n\nexport default setAxesLayout;\n","/**\n * Keep only selected data update components\n *\n * @param data: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: Any existing brushes or marks will be overwritten\n */\nconst keepData = (config, ps, flags) =>\n  function(data) {\n    // identify data\n    let d = [];\n    if (data == 'brushed') {\n      d = config.brushed;\n    } else if (data == 'marked') {\n      d = config.marked;\n    } else if (data == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n\n    if (d.length > 0) {\n      // reset selections and update config\n      ps.resetSelections('both');\n\n      // update data, charts, and grid\n      config.data = d;\n      ps.charts.forEach(pc => {\n        pc.data(d).render.default();\n        pc.brushReset();\n      });\n      if (flags.grid) {\n        ps.gridUpdate();\n      }\n    } else {\n      throw 'Error: No data selected.';\n    }\n\n    return this;\n  };\n\nexport default keepData;\n","import { difference } from 'lodash-es';\n\n/**\n * Remove selected data and components\n *\n * @param data: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: Any existing brushes or marks will be overwritten\n */\nconst removeData = (config, ps, flags) =>\n  function(data) {\n    // identify data\n    let d = [];\n    if (data == 'brushed') {\n      d = config.brushed;\n    } else if (data == 'marked') {\n      d = config.marked;\n    } else if (data == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n    d = difference(config.data, d);\n\n    if (d.length > 0 && d.length < config.data.length) {\n      // reset selections and update config\n      ps.resetSelections('both');\n\n      // update data, charts, and grid\n      config.data = d;\n      ps.charts.forEach(pc => {\n        pc.data(d).render.default();\n        pc.brushReset();\n      });\n      if (flags.grid) {\n        ps.gridUpdate();\n      }\n    } else {\n      throw 'Error: No data selected.';\n    }\n\n    return this;\n  };\n\nexport default removeData;\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n","import { csvFormat } from 'd3';\nimport { saveAs } from 'file-saver/FileSaver';\n\n/**\n * Export selected data to new csv and download\n *\n * @param {string} selection: one of {'brushed', 'marked', 'both'}\n * @param {string} filename:  name of csv file to be downloaded\n * @param {boolean} exportAll:  override selection param and export all data\n */\nconst exportData = (config, ps, flags) =>\n  function({ selection = 'both', filename = null, exportAll = false }) {\n    if (filename === null) {\n      filename = 'parasol_data.csv';\n    }\n\n    // identify data\n    let d = [];\n    if (exportAll) {\n      d = config.data;\n    } else if (selection == 'brushed') {\n      d = config.brushed;\n    } else if (selection == 'marked') {\n      d = config.marked;\n    } else if (selection == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n\n    if (d.length > 0) {\n      // format data as csv\n      // NOTE: include assigned data id number?\n      const csv = csvFormat(d, config.vars);\n\n      // create url and download\n      const file = new Blob([csv], { type: 'text/csv' });\n      saveAs(file, filename);\n    } else {\n      throw 'Error: No data selected.';\n    }\n    return this;\n  };\n\nexport default exportData;\n","/**\n * Selections are the collection of all brushed and marked data; reset all or just a subset (brushed or marked)\n *\n * @param {string} selection: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: if linked charts exist, only those are affected\n */\nconst resetSelections = (config, ps, flags) => selection => {\n  if (selection == 'brushed') {\n    ps.brushReset();\n  } else if (selection == 'marked') {\n    ps.unmark();\n  } else if (selection == 'both') {\n    ps.brushReset();\n    ps.unmark();\n  } else {\n    throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n  }\n};\n\nexport default resetSelections;\n","// parcoords wrapper: set foreground alpha on all charts\nconst alpha = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.alpha(d));\n    return this;\n  };\nexport default alpha;\n","// parcoords wrapper: set polyline hex color on all charts\nconst color = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.color(d));\n    return this;\n  };\nexport default color;\n","// parcoords wrapper: set foreground alpha when brushes exist\nconst alphaOnBrushed = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.alphaOnBrushed(d));\n    return this;\n  };\nexport default alphaOnBrushed;\n","// parcoords wrapper: set hex color of polylines within brush extents\nconst brushedColor = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.brushedColor(d));\n    return this;\n  };\nexport default brushedColor;\n","// parcoords wrapper: enable reordering on all charts\n\n// const reorderable = (config, ps, flags) =>\n//   function({ chartIDs=[...Array(ps.charts.length).keys()] }={}) {\n//     ps.charts.forEach( (pc, i) => {\n//       if (chartIDs.includes(i)) {\n//         pc\n//           .reorderable()\n//           .hideAxis(config.partition[i])\n//           .render()\n//           .updateAxes(0);\n//       }\n//     });\n//     return this;\n//   }\n// export default reorderable;\n\nconst reorderable = (config, ps, flags) =>\n  function() {\n    ps.charts.forEach(pc => pc.reorderable());\n    return this;\n  };\nexport default reorderable;\n","// parcoords wrapper: set composite mode on all charts\nconst composite = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.composite(d));\n    return this;\n  };\nexport default composite;\n","// parcoords wrapper: enable shadows on all charts\nconst shadows = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.shadows(d));\n    return this;\n  };\nexport default shadows;\n","// parcoords wrapper: mark a data element\nconst mark = (config, ps, flags) => d => {\n  ps.charts.forEach(pc => pc.mark(d));\n};\nexport default mark;\n","// parcoords wrapper: highlight a data element\nconst highlight = (config, ps, flags) => d => {\n  ps.charts.forEach(pc => pc.highlight(d));\n};\nexport default highlight;\n","// parcoords wrapper: format dimensions \nconst dimensions = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.dimensions(d));\n    return this;\n  };\nexport default dimensions;\n","// parcoords wrapper: flip listed axes on all charts\nconst flipAxes = (config, ps, flags) =>\n  function(axes) {\n    ps.charts.forEach(pc => pc.flipAxes(axes));\n    return this;\n  };\nexport default flipAxes;\n","// parcoords wrapper: set the domain (and scale?) of a single axis on all charts\nconst scale = (config, ps, flags) =>\n  function(axis, domain) {\n    const range = ps.charts[0].dimensions()[axis].yscale.domain();\n    if (range[0] >= domain[0] && range[1] <= domain[1]) {\n      ps.charts.forEach(pc => pc.scale(axis, domain));\n    } else {\n      throw Error('Domain Error: specified domain must exceed axis extrema.');\n    }\n    return this;\n  };\nexport default scale;\n","// parcoords wrapper: set bundle dimension on all charts\nconst bundleDimension = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.bundleDimension(d));\n    return this;\n  };\nexport default bundleDimension;\n","// parcoords wrapper: set bundling strength on all charts\nconst bundlingStrength = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.bundlingStrength(d));\n    return this;\n  };\nexport default bundlingStrength;\n","// parcoords wrapper: set bundling smoothness on all charts\nconst smoothness = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.smoothness(d));\n    return this;\n  };\nexport default smoothness;\n","// parcoords wrapper: render and update charts, maintain config\nconst render = (config, ps, flags) =>\n  function() {\n    ps.charts.forEach((pc, i) => {\n      pc.hideAxis(config.partition[i])\n        .render()\n        .updateAxes(0);\n    });\n    return this;\n  };\nexport default render;\n","// parcoords wrapper: reset all brushes and preform necessary updates\nconst brushReset = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.brushReset());\n\n  // NOTE: brushed data in config is updated by sync() as consequence of pc.brushReset()\n  // currently need to force due to issue with ParCoords.selected() returning entire dataset if brush extents are empty\n  config.brushed = [];\n\n  if (flags.grid) {\n    ps.gridUpdate();\n  }\n};\n\nexport default brushReset;\n","// parcoords wrapper: reset all marks and preform necessary updates\nconst unmark = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.unmark());\n  config.marked = [];\n  if (flags.grid) {\n    config.grid.setSelectedRows([]);\n    ps.gridUpdate();\n  }\n};\n\nexport default unmark;\n","// parcoords wrapper: reset all highlights\nconst unhighlight = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.unhighlight());\n};\nexport default unhighlight;\n","import { union } from 'lodash-es';\n\nconst DefaultConfig = {\n  dataView: false,\n  grid: false,\n  chartOptions: {}, // parcoords options, applies to all charts\n  brushed: [], // intersection of all brushed data in linked charts\n  marked: [], // union of all marked data in linked charts\n  selections: function() {\n    return union(this.brushed, this.marked);\n  },\n};\n\nexport default DefaultConfig;\n","import { entries, keys, dispatch } from 'd3';\n\nimport DefaultConfig from './defaultConfig';\nimport format_data from '../util/format_data';\n\nconst initState = (data, userConfig) => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n  // force attributes for consistent operation\n  config.data = data;\n  config.vars = Object.keys(data[0]); // does not contain 'id'\n  config.partition = {}; // { chart id: [hidden vars]} built in init.js\n\n  // assign each data element an ID for slickgrid and other analyses\n  config.data.forEach((d, i) => {\n    d.id = d.id || i;\n  });\n  config.data = format_data(config.data);\n\n  // NOTE: \"id\" col hidden globally by default in init.js\n\n  const eventTypes = [\n    // 'data', // when data in a chart is updated, how should this cascade to linked?\n    // 'render',\n    // 'resize',\n    // 'highlight',\n    // 'mark',\n    'brush',\n    'brushend',\n    'brushstart',\n    // 'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      linked: false,\n      grid: false,\n      // axes: false,\n      // interactive: false,\n      // debug: false,\n    };\n  // xscale = scalePoint(),\n  // dragging = {},\n  // axis = axisLeft().ticks(5),\n  // ctx = {},\n  // canvas = {};\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n  };\n};\n\nexport default initState;\n","//css\nimport './parallel-coordinates.css';\n\n//api\nimport init from './api/init';\nimport attachGrid from './api/attachGrid';\nimport gridUpdate from './api/gridUpdate';\nimport linked from './api/linked';\nimport cluster from './api/cluster';\nimport weightedSum from './api/weightedSum';\nimport hideAxes from './api/hideAxes';\nimport showAxes from './api/showAxes';\nimport setAxesLayout from './api/setAxesLayout';\nimport keepData from './api/keepData';\nimport removeData from './api/removeData';\nimport exportData from './api/exportData';\nimport resetSelections from './api/resetSelections';\n\n// parcoords wrappers\nimport alpha from './wrap/alpha';\nimport color from './wrap/color';\nimport alphaOnBrushed from './wrap/alphaOnBrushed';\nimport brushedColor from './wrap/brushedColor';\nimport reorderable from './wrap/reorderable';\nimport composite from './wrap/composite';\nimport shadows from './wrap/shadows';\nimport mark from './wrap/mark';\nimport highlight from './wrap/highlight';\nimport dimensions from './wrap/dimensions';\nimport flipAxes from './wrap/flipAxes';\nimport scale from './wrap/scale';\nimport bundleDimension from './wrap/bundleDimension';\nimport bundlingStrength from './wrap/bundlingStrength';\nimport smoothness from './wrap/smoothness';\nimport render from './wrap/render';\nimport brushReset from './wrap/brushReset';\nimport unmark from './wrap/unmark';\nimport unhighlight from './wrap/unhighlight';\n\nimport initState from './state/initState';\n// import bindEvents from './bindEvents';\nimport { version } from '../package.json';\n\nconst Parasol = (data, userConfig) => {\n  const state = initState(data, userConfig);\n  const { config, events, flags } = state;\n\n  const ps = init(config);\n\n  // bindEvents();\n\n  // expose the state of charts and grid\n  ps.state = config;\n  ps.flags = flags;\n  ps.version = version;\n  ps.grid = config.grid;\n  ps.dataview = config.dataview;\n\n  ps.attachGrid = attachGrid(config, ps, flags);\n  ps.gridUpdate = gridUpdate(config, ps, flags);\n  ps.linked = linked(config, ps, flags);\n  ps.cluster = cluster(config, ps, flags);\n  ps.weightedSum = weightedSum(config, ps, flags);\n  ps.hideAxes = hideAxes(config, ps, flags);\n  ps.showAxes = showAxes(config, ps, flags);\n  ps.setAxesLayout = setAxesLayout(config, ps, flags);\n  ps.keepData = keepData(config, ps, flags);\n  ps.removeData = removeData(config, ps, flags);\n  ps.exportData = exportData(config, ps, flags);\n  ps.resetSelections = resetSelections(config, ps, flags);\n\n  // parcoords methods (apply to all charts)\n  ps.alpha = alpha(config, ps, flags);\n  ps.color = color(config, ps, flags);\n  ps.alphaOnBrushed = alphaOnBrushed(config, ps, flags);\n  ps.brushedColor = brushedColor(config, ps, flags);\n  ps.reorderable = reorderable(config, ps, flags);\n  ps.composite = composite(config, ps, flags);\n  ps.shadows = shadows(config, ps, flags);\n  ps.mark = mark(config, ps, flags);\n  ps.highlight = highlight(config, ps, flags);\n  ps.dimensions = dimensions(config, ps, flags);\n  ps.scale = scale(config, ps, flags);\n  ps.flipAxes = flipAxes(config, ps, flags);\n  ps.bundleDimension = bundleDimension(config, ps, flags);\n  ps.bundlingStrength = bundlingStrength(config, ps, flags);\n  ps.smoothness = smoothness(config, ps, flags);\n  ps.render = render(config, ps, flags);\n  ps.brushReset = brushReset(config, ps, flags);\n  ps.unmark = unmark(config, ps, flags);\n  ps.unhighlight = unhighlight(config, ps, flags);\n\n  return ps;\n};\n\nexport default Parasol;\n"],"names":["init","ps","selection","selectAll","charts","each","d","i","ParCoords","config","chartOptions","data","hideAxis","alpha","render","mode","brushMode","partition","as_float","converted","parseFloat","x","isNaN","attachGrid","flags","container","columns","options","grid","checkboxSelector","SlickGrid","Plugins","CheckboxSelectColumn","column_keys","vars","difference","unshift","map","key","getColumnDefinition","dataView","Data","DataView","setItems","Grid","setSelectionModel","RowSelectionModel","selectActiveRow","registerPlugin","onRowCountChanged","subscribe","e","args","updateRowCount","onRowsChanged","invalidateRows","rows","syncGridSelection","sortcol","c","name","shift","sortdir","comparer","a","b","y","onSort","sortAsc","sortCol","field","sort","gridUpdate","setColumns","selections","length","marked","union","beginUpdate","endUpdate","sync","brush_extents","linked","forEach","push","pc","selected","brushReset","brushed","intersection","chartIDs","Array","keys","Number","j","on","onMouseEnter","getCellFromEvent","row","getItems","highlight","onMouseLeave","unhighlight","onSelectedRowsChanged","selected_row_ids","getSelectedRows","unmark","mark","array_to_object","reduce","acc","obj","k","concat","object_to_array","df","result","entries","values","val","toString","arr","array","Math","max","apply","min","num","l","sum","mean","pow","sqrt","variance","standardDeviation","extents","standardize","zScores","format_data","csvParse","csvFormat","add_column","col_name","names","col","includes","col_def","cluster","displayIDs","palette","schemeCategory10","std","hidden","isArray","scheme","scaleOrdinal","cluster_vars","v","target","value","kmeans","clusters","id","createAxes","color","updateAxes","cols","getColumns","normalize","norms","weightedSum","weights","norm","row_totals","d_weight","score","hideAxes","isPlainObject","chartID","showAxes","setAxesLayout","layout","keepData","resetSelections","default","removeData","saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","listener","call","auto_bom","blob","type","Blob","String","fromCharCode","FileSaver","no_auto_bom","force","object_url","dispatch_all","split","fs_error","FileReader","reader","onloadend","url","replace","popup","open","location","href","undefined","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","prototype","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","window","this","content","module","exports","exportData","filename","exportAll","csv","alphaOnBrushed","brushedColor","reorderable","composite","shadows","dimensions","flipAxes","axes","scale","axis","domain","range","yscale","Error","bundleDimension","bundlingStrength","smoothness","setSelectedRows","DefaultConfig","initState","userConfig","Object","assign","eventTypes","events","Parasol","state","version","dataview"],"mappings":"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"}