{"version":3,"file":"parasol.js","sources":["../src/api/init.js","../src/util/as_float.js","../src/api/attachGrid.js","../src/api/gridUpdate.js","../src/api/sync.js","../src/api/linked.js","../src/util/wrangle.js","../src/util/arr_stats.js","../src/util/standardize.js","../src/util/format_data.js","../src/util/add_column.js","../src/api/cluster.js","../src/util/normalize.js","../src/api/weightedSum.js","../src/api/hideAxes.js","../src/api/showAxes.js","../src/api/setAxesLayout.js","../src/api/keepData.js","../src/api/removeData.js","../node_modules/file-saver/FileSaver.js","../src/api/exportData.js","../src/api/resetSelections.js","../src/wrap/alpha.js","../src/wrap/color.js","../src/wrap/alphaOnBrushed.js","../src/wrap/brushedColor.js","../src/wrap/reorderable.js","../src/wrap/composite.js","../src/wrap/shadows.js","../src/wrap/mark.js","../src/wrap/highlight.js","../src/wrap/dimensions.js","../src/wrap/flipAxes.js","../src/wrap/scale.js","../src/wrap/bundleDimension.js","../src/wrap/bundlingStrength.js","../src/wrap/smoothness.js","../src/wrap/render.js","../src/wrap/brushReset.js","../src/wrap/unmark.js","../src/wrap/unhighlight.js","../src/state/defaultConfig.js","../src/state/initState.js","../src/index.js"],"sourcesContent":["import { selectAll } from 'd3';\nimport ParCoords from 'parcoord-es';\n\n/**\n * Setup a new visualization.\n *\n * @param config\n * @returns {ps} a parasol closure\n */\nconst init = config => {\n  /**\n   * Create a visualization within a container. The selector can also be a d3 selection.\n   *\n   * @param selection a d3 selection\n   * @returns {ps} instance for chained api, compatible with parcoords api\n   */\n  const ps = function(selection) {\n    selection = ps.selection = selectAll(selection);\n\n    // store pc charts in array\n    ps.charts = [];\n    selection.each(function(d, i) {\n      ps.charts[i] = ParCoords(config.chartOptions)(this)\n        .data(config.data)\n        .hideAxis(['id'])\n        .alpha(0.4)\n        .render()\n        .mode('queue')\n        .brushMode('1D-axes'); //1D-axes must be used with linking\n\n      // add \"id\" to partition globally\n      config.partition[i] = ['id'];\n    });\n\n    // for chained api\n    return ps;\n  };\n  // for partial-application style programming\n  return ps;\n};\n\nexport default init;\n","const as_float = x => {\n  const converted = parseFloat(x);\n  return isNaN(converted) ? x : converted;\n};\n\nexport default as_float;\n","import SlickGrid from 'slickgrid-es6';\nimport { difference } from 'lodash-es';\n\nimport as_float from '../util/as_float';\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {string} container:   DOM element in which grid will be placed.\n * @param {array}  columns:    An array of column definitions (objects).\n * @param {object} options:     SlickGrid options.\n **/\nconst attachGrid = (config, ps, flags) =>\n  function({ container, columns = null, options = null }) {\n    flags.grid = true;\n\n    const checkboxSelector = new SlickGrid.Plugins.CheckboxSelectColumn({\n      cssClass: 'slick-cell-checkboxsel',\n    });\n\n    if (columns === null) {\n      // place id col on left\n      let column_keys = config.vars;\n      column_keys = difference(column_keys, ['id']);\n      // NOTE: remove line below to remove id col from grid\n      column_keys.unshift('id');\n\n      columns = column_keys.map((key, i) => ({\n        id: key,\n        name: key,\n        field: key,\n        sortable: true,\n      }));\n      columns.unshift(checkboxSelector.getColumnDefinition());\n    }\n\n    if (options === null) {\n      options = {\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        multiColumnSort: false,\n        editable: true,\n        asyncEditorLoading: false,\n        autoEdit: false,\n      };\n    }\n\n    // initialize\n    config.dataView = new SlickGrid.Data.DataView();\n    config.dataView.setItems(config.data);\n    config.grid = new SlickGrid.Grid(\n      container,\n      config.dataView,\n      columns,\n      options\n    );\n\n    config.grid.setSelectionModel(\n      new SlickGrid.Plugins.RowSelectionModel({ selectActiveRow: false })\n    );\n    config.grid.registerPlugin(checkboxSelector);\n\n    // wire up model events to drive the grid\n    config.dataView.onRowCountChanged.subscribe((e, args) => {\n      config.grid.updateRowCount();\n      config.grid.render();\n    });\n\n    config.dataView.onRowsChanged.subscribe((e, args) => {\n      config.grid.invalidateRows(args.rows);\n      config.grid.render();\n    });\n\n    // keep checkboxes matched with row on update\n    config.dataView.syncGridSelection(config.grid);\n\n    // column sorting\n    let sortcol = columns.map(c => c.name);\n    sortcol.shift();\n    let sortdir = 1;\n\n    const comparer = (a, b) => {\n      const x = as_float(a[sortcol]);\n      const y = as_float(b[sortcol]);\n      return x == y ? 0 : x > y ? 1 : -1;\n    };\n\n    // click header to sort grid column\n    config.grid.onSort.subscribe((e, args) => {\n      sortdir = args.sortAsc ? 1 : -1;\n      sortcol = args.sortCol.field;\n\n      config.dataView.sort(comparer, args.sortAsc);\n    });\n\n    return this;\n  };\n\nexport default attachGrid;\n","import { union } from 'lodash-es';\nimport as_float from '../util/as_float';\n\n/**\n * Update data displayed in grid.\n * @param {array}  data:    array of objects.\n * @param {array} columns:  column definitions.\n **/\nconst gridUpdate = (config, ps, flags) =>\n  function({ data = null, columns = null } = {}) {\n    if (columns !== null) {\n      config.grid.setColumns(columns);\n      config.grid.render();\n    }\n    if (data === null) {\n      data = config.selections();\n      if (data.length === 0) {\n        // if selections empty, use full dataset\n        data = config.data;\n      }\n    }\n    // if marked data exists, keep in grid\n    if (config.marked.length) {\n      data = union(data, config.marked);\n    }\n\n    const comparer = (a, b) => {\n      const x = as_float(a['id']);\n      const y = as_float(b['id']);\n      return x == y ? 0 : x > y ? 1 : -1;\n    };\n\n    config.dataView.beginUpdate();\n    config.dataView.setItems(data);\n    config.dataView.sort(comparer, true);\n    config.dataView.endUpdate();\n\n    return this;\n  };\n\nexport default gridUpdate;\n","import { union, intersection } from 'lodash-es';\n\n// synchronize data between linked components\nconst sync = (config, ps, flags) =>\n  function() {\n    //obtain array of brushed data for each chart\n    const brush_extents = [];\n    ps.linked.forEach(pc => {\n      brush_extents.push(pc.selected());\n    });\n\n    //check edge case where all brushes individually clicked away\n    if (union(...brush_extents).length == 0) {\n      ps.linked.forEach(pc => {\n        pc.brushReset();\n      });\n      config.brushed = [];\n      // update data in grid\n      if (flags.grid) {\n        ps.gridUpdate(config.data);\n      }\n    } else {\n      const brushed = intersection(...brush_extents);\n      ps.linked.forEach(pc => {\n        pc.brushed(brushed).render();\n      });\n\n      // NOTE: once pc.selected issue fixed, remove if statement and uncomment line below\n      //config.brushed = brushed;\n      if (brushed.length < config.data.length) {\n        config.brushed = brushed;\n      } else {\n        config.brushed = [];\n      }\n      // update data in grid\n      // NOTE: once pc.selected fixed, remove arg from gridUpdate\n      if (flags.grid) {\n        ps.gridUpdate({ data: brushed });\n      }\n    }\n  };\n\nexport default sync;\n","import sync from './sync';\n\n/**\n * Link brush activity between specified charts, and grid if it exists.\n *\n * @param {array} chartIDs:   charts to be linked (defaults to all).\n **/\nconst linked = (config, ps, flags) =>\n  function(chartIDs = [...Array(ps.charts.length).keys()]) {\n    // force numeric type for indexing\n    chartIDs = chartIDs.map(Number);\n\n    // setup linked components\n    ps.linked = [];\n    chartIDs.forEach((i, j) => {\n      ps.linked[j] = ps.charts[i];\n    });\n\n    ps.linked.forEach(pc => {\n      pc.on('brush', sync(config, ps, flags));\n    });\n\n    // connect grid\n    if (flags.grid) {\n      // highlight row in chart\n      config.grid.onMouseEnter.subscribe((e, args) => {\n        let i = config.grid.getCellFromEvent(e).row;\n        const d = config.dataView.getItems() || config.data;\n        ps.linked.forEach(pc => {\n          pc.highlight([d[i]]);\n        });\n      });\n      config.grid.onMouseLeave.subscribe((e, args) => {\n        ps.linked.forEach(pc => {\n          pc.unhighlight();\n        });\n      });\n\n      // mark row in chart\n      config.grid.onSelectedRowsChanged.subscribe((e, args) => {\n        // reset and update selected rows\n        const selected_row_ids = config.grid.getSelectedRows();\n        const d = config.dataView.getItems() || config.data;\n        ps.linked.forEach(pc => {\n          pc.unmark();\n        });\n        selected_row_ids.forEach(i => {\n          ps.linked.forEach(pc => {\n            pc.mark([d[i]]);\n          });\n        });\n\n        // update marked data\n        config.marked = ps.linked[0].marked();\n\n        // refresh grid if brushes are applied\n        if (config.brushed.length) {\n          ps.gridUpdate();\n        }\n      });\n    }\n\n    return this;\n  };\n\nexport default linked;\n","// wrangling tools to manipulate data for processing values\n\n// d3 data is formatted as array of objects, each row is an object\n// convert to object of arrays, each array is a column\n// e.g. {\"var1\": [col1], \"var2\": [col2]}\nconst array_to_object = data =>\n  data.reduce((acc, obj) => {\n    Object.keys(obj).forEach(function(k) {\n      acc[k] = (acc[k] || []).concat(Number(obj[k]));\n    });\n    return acc;\n  }, {});\n\n// data is formatted as 'data frame' with columns as keys\n// convert back to array of objects with rows as objects\nconst object_to_array = (df, data) => {\n  var result = [];\n  Object.entries(df).forEach(([key, values]) => {\n    values.forEach((val, i) => {\n      result[i] = result[i] || {};\n      // get original string if value is NaN\n      if (isNaN(val)) {\n        result[i][key] = data[i][key];\n      } else {\n        result[i][key] = val.toString();\n      }\n    });\n  });\n  return result;\n};\n\nexport { array_to_object, object_to_array };\n","// inspired by: https://gist.github.com/Daniel-Hug/7273430\nconst arr = {\n  max: function(array) {\n    return Math.max.apply(null, array);\n  },\n\n  min: function(array) {\n    return Math.min.apply(null, array);\n  },\n\n  range: function(array) {\n    return arr.max(array) - arr.min(array);\n  },\n\n  extents: function(array) {\n    return [arr.min(array), arr.max(array)];\n  },\n\n  sum: function(array) {\n    let num = 0;\n    for (let i = 0, l = array.length; i < l; i++) num += array[i];\n    return num;\n  },\n\n  mean: function(array) {\n    return arr.sum(array) / array.length;\n  },\n\n  variance: function(array) {\n    const mean = arr.mean(array);\n    return arr.mean(\n      array.map(function(num) {\n        return Math.pow(num - mean, 2);\n      })\n    );\n  },\n\n  standardDeviation: function(array) {\n    return Math.sqrt(arr.variance(array));\n  },\n\n  zScores: function(array) {\n    const mean = arr.mean(array);\n    const standardDeviation = arr.standardDeviation(array);\n    return array.map(function(num) {\n      return (num - mean) / standardDeviation;\n    });\n  },\n\n  norms: function(array) {\n    const extents = arr.extents(array);\n    return array.map(function(num) {\n      return (num - extents[0]) / (extents[1] - extents[0]);\n    });\n  },\n};\n\nexport default arr;\n","import { array_to_object, object_to_array } from './wrangle';\nimport arr from './arr_stats';\n\n// convert values to zscores\nconst standardize = data => {\n  // reformat data\n  const df = array_to_object(data);\n\n  // standardize values\n  Object.keys(df).forEach(key => {\n    df[key] = arr.zScores(df[key]);\n  });\n\n  // convert back to original data type\n  return object_to_array(df, data);\n};\n\nexport default standardize;\n","// format data values as strings\n// const parcoords_format = d => {\n// \td.forEach(\n// \t\t(d_obj) => {\n// \t\t\tObject.entries(d_obj).forEach(\n// \t\t\t\t([key, value]) =>  {\n// \t\t\t\t\td_obj[key] = value.toString();\n// \t\t\t\t});\n// \t\t});\n// };\nimport { csvFormat, csvParse } from 'd3-dsv';\n\nconst format_data = data => csvParse(csvFormat(data));\n\nexport default format_data;\n","import { includes } from 'lodash-es';\n// add column defintion to grid columns\nconst add_column = (columns, col_name) => {\n  // ignore repeats\n  const names = columns.map(col => col.name);\n  if (includes(names, col_name)) {\n    return columns;\n  } else {\n    const col_def = {\n      id: col_name,\n      name: col_name,\n      field: col_name,\n      sortable: true,\n    };\n    columns.push(col_def);\n    return columns;\n  }\n};\nexport default add_column;\n","import kmeans from 'ml-kmeans';\nimport { scaleOrdinal, schemeCategory10 } from 'd3';\n\nimport standardize from '../util/standardize';\nimport format_data from '../util/format_data';\nimport add_column from '../util/add_column';\n\n/**\n * Partition data into k clusters in which each data element belongs to\n * the cluster with the nearest mean.\n *\n * @param {int} k: number of clusters\n * @param {array} displayIDs: charts that will display cluster colors\n * @param {} palette: d3 palette or function mapping cluster ids to color\n * @param {array} vars: variables used for clustering. NOTE: associated data must be numeric\n * @param {object} options: ml-kmeans options\n * @param {bool} std: convert values to zscores to obtain unbiased clusters\n * @param {bool} hidden: determines whether cluster axis will be displayed on charts (can be individually updated with hideAxis later)\n */\nconst cluster = (config, ps, flags) =>\n  function({\n    k = 3,\n    vars = config.vars,\n    displayIDs = [...Array(ps.charts.length).keys()],\n    palette = schemeCategory10,\n    options = {},\n    std = true,\n    hidden = true,\n  } = {}) {\n    if (Array.isArray(palette)) {\n      const scheme = scaleOrdinal(palette);\n      palette = d => scheme(Number(d['cluster']));\n    }\n\n    let data = [];\n    if (std === true) {\n      data = standardize(config.data);\n    } else {\n      data = config.data;\n    }\n\n    // setup object to filter variables that will be used in clustering\n    const cluster_vars = {};\n    vars.forEach(v => {\n      cluster_vars[v] = true;\n    });\n\n    // get data values in array of arrays for clustering\n    // (values from each row object captured in array)\n    const values = [];\n    data.forEach(d => {\n      const target = [];\n      Object.entries(d).forEach(([key, value]) => {\n        // only take values from variables listed in function argument\n        if (cluster_vars[key] == true) {\n          target.push(Number(value));\n        }\n      });\n      values.push(target);\n    });\n\n    // preform clustering and update config data\n    const result = kmeans(values, k, options);\n    config.data.forEach((d, i) => {\n      d.cluster = result.clusters[i].toString();\n    });\n    // console.log('kmeans++');\n    // console.log(result.iterations, result.centroids.map(c => c.error));\n    // console.log(result.centroids);\n\n    // hide cluster axis and show colors by default\n    if (hidden == true) {\n      Object.keys(config.partition).forEach(id => {\n        config.partition[id].push('cluster');\n      });\n    }\n\n    // format data, update charts\n    config.vars.push('cluster');\n    config.data = format_data(config.data);\n    ps.charts.forEach(pc => {\n      pc.data(config.data)\n        .render()\n        .createAxes();\n      // .updateAxes();\n    });\n\n    ps.charts.forEach((pc, i) => {\n      // only color charts in displayIDs\n      if (displayIDs.includes(i)) {\n        pc.color(palette);\n      }\n      pc.hideAxis(config.partition[i])\n        .render()\n        .updateAxes(0);\n    });\n\n    if (flags.grid) {\n      // add column\n      const cols = add_column(config.grid.getColumns(), 'cluster');\n      ps.gridUpdate({ columns: cols });\n    }\n\n    return this;\n  };\n\nexport default cluster;\n","import { array_to_object, object_to_array } from './wrangle';\nimport arr from './arr_stats';\n\n// normalize data values (scale: 0-1) for unbiased aggregate scores\nconst normalize = data => {\n  // reformat data\n  const df = array_to_object(data);\n\n  // normalize values\n  Object.entries(df).forEach(([key, col]) => {\n    df[key] = arr.norms(col);\n  });\n\n  // convert back to original data type\n  return object_to_array(df, data);\n};\n\nexport default normalize;\n","import normalize from '../util/normalize';\nimport format_data from '../util/format_data';\nimport arr from '../util/arr_stats';\nimport add_column from '../util/add_column';\n\n/**\n * Compute individual weighted sums for each solution based on\n * user specified weights.\n *\n * @param {object} weights: specify weight of each variable, unspecified variables will be assigned weight 0\n * @param {array} displayIDs: charts that will display 'weighted sum' variable; defaults to all charts\n * @param {bool} norm: normalize values (0-1) to obtain fair weighting\n */\nconst weightedSum = (config, ps, flags) =>\n  function({\n    weights,\n    displayIDs = [...Array(ps.charts.length).keys()],\n    norm = true,\n  }) {\n    // NOTE: if data is re-scored, old score will not affect new score unless it is given a weight itself in the 'weights' object\n\n    // force numeric type for indexing\n    displayIDs = displayIDs.map(Number);\n\n    let data = [];\n    if (norm === true) {\n      data = normalize(config.data);\n    } else {\n      data = config.data;\n    }\n\n    // compute initial weight for each data element\n    const row_totals = [];\n    data.forEach((d, i) => {\n      let d_weight = 0;\n      Object.entries(d).forEach(\n        // find cumulative sum of weight times value\n        ([key, val]) => {\n          if (weights[key]) {\n            d_weight += val * weights[key];\n          }\n        }\n      );\n      data[i].score = d_weight;\n      row_totals.push(d_weight);\n    });\n\n    // normalize all values against total weight and assign values\n    const extents = arr.extents(row_totals);\n    data.forEach((d, i) => {\n      config.data[i]['weighted sum'] = (\n        (d.score - extents[0]) /\n        (extents[1] - extents[0])\n      ).toString();\n    });\n\n    // partition scores var on charts\n    Object.keys(config.partition).forEach(i => {\n      if (!displayIDs.includes(Number(i))) {\n        // chart not in displayIDs, hidden on this chart\n        config.partition[Number(i)].push('weighted sum');\n      }\n    });\n\n    // weighted sums are ready, update data and charts\n    config.vars.push('weighted sum');\n    config.data = format_data(config.data);\n    ps.charts.forEach((pc, i) => {\n      pc.data(config.data)\n        .hideAxis(config.partition[i])\n        .render()\n        .createAxes();\n      // .updateAxes();\n    });\n    // NOTE: need to maintain current state of charts somehow\n\n    if (flags.grid) {\n      // add column\n      const cols = add_column(config.grid.getColumns(), 'weighted sum');\n      ps.gridUpdate({ columns: cols });\n    }\n\n    return this;\n  };\n\nexport default weightedSum;\n","import { isPlainObject, union } from 'lodash-es';\n\n/**\n * Hide a set of axes globally or from specific charts.\n *\n * @param partition: array or object idenifying axes to be hidden; if object, format as { chart id: [hidden vars]}\n */\nconst hideAxes = (config, ps, flags) =>\n  function(partition) {\n    if (Array.isArray(partition)) {\n      // append array to every key in config.partition\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = union(config.partition[id], partition);\n      });\n    } else if (isPlainObject(partition)) {\n      // take union of values for each key that is also in config.partition\n      Object.entries(partition).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = union(config.partition[key], partition[key]);\n        }\n      });\n    } else {\n      throw 'Error: please provide an object or array as argument.';\n    }\n\n    // iterate over partition keys and hide all variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(500);\n    });\n\n    return this;\n  };\n\nexport default hideAxes;\n","import { isPlainObject, difference } from 'lodash-es';\n\n/**\n * Show a set of axes globally or on specific charts\n *\n * @param partition: array or object idenifying axes to be shown; if object, format as { chart id: [vars to show]}\n */\nconst showAxes = (config, ps, flags) =>\n  function(partition) {\n    if (typeof partition === 'undefined') {\n      // show all axes on all charts (empty partition)\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = [];\n      });\n    } else if (Array.isArray(partition)) {\n      // remove array from every key in config.partition\n      Object.keys(config.partition).forEach(function(id) {\n        config.partition[id] = difference(config.partition[id], partition);\n      });\n    } else if (isPlainObject(partition)) {\n      // take difference of values for each key that is also in config.partition\n      // (i.e. remove from hidden)\n      Object.entries(partition).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = difference(\n            config.partition[key],\n            partition[key]\n          );\n        }\n      });\n    } else {\n      throw 'Error: please provide an object or array as argument.';\n    }\n\n    // iterate over partition keys and hide only remaining variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(500);\n    });\n\n    return this;\n  };\n\nexport default showAxes;\n","import { isPlainObject, difference } from 'lodash-es';\n\n/**\n * Specify the axes that will appear in each chart. Default for unspecified charts is to display all axes.\n *\n * @param {object} layout:  indentify a list of axes to be shown on each chart; format as { chart id: [vars to show]}\n */\nconst setAxesLayout = (config, ps, flags) =>\n  function(layout) {\n    if (isPlainObject(layout)) {\n      // take difference of all variables and layout variables\n      // i.e. show only those which appear in both data and layout\n      Object.entries(layout).forEach(([key, values]) => {\n        if (config.partition[key]) {\n          config.partition[key] = difference(\n            config.vars.concat('id'),\n            layout[key]\n          );\n        }\n      });\n    } else {\n      throw 'Error: please provide layout as a plain object.';\n    }\n\n    // iterate over partition keys and hide only remaining variables in value array\n    Object.entries(config.partition).forEach(([chartID, vars]) => {\n      ps.charts[chartID].hideAxis(vars);\n      ps.charts[chartID].render().updateAxes(0);\n    });\n\n    return this;\n  };\n\nexport default setAxesLayout;\n","/**\n * Keep only selected data update components\n *\n * @param data: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: Any existing brushes or marks will be overwritten\n */\nconst keepData = (config, ps, flags) =>\n  function(data) {\n    // identify data\n    let d = [];\n    if (data == 'brushed') {\n      d = config.brushed;\n    } else if (data == 'marked') {\n      d = config.marked;\n    } else if (data == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n\n    if (d.length > 0) {\n      // reset selections and update config\n      ps.resetSelections('both');\n\n      // update data, charts, and grid\n      config.data = d;\n      ps.charts.forEach(pc => {\n        pc.data(d).render.default();\n        pc.brushReset();\n      });\n      if (flags.grid) {\n        ps.gridUpdate();\n      }\n    } else {\n      throw 'Error: No data selected.';\n    }\n\n    return this;\n  };\n\nexport default keepData;\n","import { difference } from 'lodash-es';\n\n/**\n * Remove selected data and components\n *\n * @param data: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: Any existing brushes or marks will be overwritten\n */\nconst removeData = (config, ps, flags) =>\n  function(data) {\n    // identify data\n    let d = [];\n    if (data == 'brushed') {\n      d = config.brushed;\n    } else if (data == 'marked') {\n      d = config.marked;\n    } else if (data == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n    d = difference(config.data, d);\n\n    if (d.length > 0 && d.length < config.data.length) {\n      // reset selections and update config\n      ps.resetSelections('both');\n\n      // update data, charts, and grid\n      config.data = d;\n      ps.charts.forEach(pc => {\n        pc.data(d).render.default();\n        pc.brushReset();\n      });\n      if (flags.grid) {\n        ps.gridUpdate();\n      }\n    } else {\n      throw 'Error: No data selected.';\n    }\n\n    return this;\n  };\n\nexport default removeData;\n","/* FileSaver.js\n * A saveAs() FileSaver implementation.\n * 1.3.2\n * 2016-06-16 18:25:19\n *\n * By Eli Grey, http://eligrey.com\n * License: MIT\n *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n */\n\n/*global self */\n/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */\n\nvar saveAs = saveAs || (function(view) {\n\t\"use strict\";\n\t// IE <10 is explicitly unsupported\n\tif (typeof view === \"undefined\" || typeof navigator !== \"undefined\" && /MSIE [1-9]\\./.test(navigator.userAgent)) {\n\t\treturn;\n\t}\n\tvar\n\t\t  doc = view.document\n\t\t  // only get URL when necessary in case Blob.js hasn't overridden it yet\n\t\t, get_URL = function() {\n\t\t\treturn view.URL || view.webkitURL || view;\n\t\t}\n\t\t, save_link = doc.createElementNS(\"http://www.w3.org/1999/xhtml\", \"a\")\n\t\t, can_use_save_link = \"download\" in save_link\n\t\t, click = function(node) {\n\t\t\tvar event = new MouseEvent(\"click\");\n\t\t\tnode.dispatchEvent(event);\n\t\t}\n\t\t, is_safari = /constructor/i.test(view.HTMLElement) || view.safari\n\t\t, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)\n\t\t, throw_outside = function(ex) {\n\t\t\t(view.setImmediate || view.setTimeout)(function() {\n\t\t\t\tthrow ex;\n\t\t\t}, 0);\n\t\t}\n\t\t, force_saveable_type = \"application/octet-stream\"\n\t\t// the Blob API is fundamentally broken as there is no \"downloadfinished\" event to subscribe to\n\t\t, arbitrary_revoke_timeout = 1000 * 40 // in ms\n\t\t, revoke = function(file) {\n\t\t\tvar revoker = function() {\n\t\t\t\tif (typeof file === \"string\") { // file is an object URL\n\t\t\t\t\tget_URL().revokeObjectURL(file);\n\t\t\t\t} else { // file is a File\n\t\t\t\t\tfile.remove();\n\t\t\t\t}\n\t\t\t};\n\t\t\tsetTimeout(revoker, arbitrary_revoke_timeout);\n\t\t}\n\t\t, dispatch = function(filesaver, event_types, event) {\n\t\t\tevent_types = [].concat(event_types);\n\t\t\tvar i = event_types.length;\n\t\t\twhile (i--) {\n\t\t\t\tvar listener = filesaver[\"on\" + event_types[i]];\n\t\t\t\tif (typeof listener === \"function\") {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlistener.call(filesaver, event || filesaver);\n\t\t\t\t\t} catch (ex) {\n\t\t\t\t\t\tthrow_outside(ex);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t, auto_bom = function(blob) {\n\t\t\t// prepend BOM for UTF-8 XML and text/* types (including HTML)\n\t\t\t// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n\t\t\tif (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n\t\t\t\treturn new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});\n\t\t\t}\n\t\t\treturn blob;\n\t\t}\n\t\t, FileSaver = function(blob, name, no_auto_bom) {\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\t// First try a.download, then web filesystem, then object URLs\n\t\t\tvar\n\t\t\t\t  filesaver = this\n\t\t\t\t, type = blob.type\n\t\t\t\t, force = type === force_saveable_type\n\t\t\t\t, object_url\n\t\t\t\t, dispatch_all = function() {\n\t\t\t\t\tdispatch(filesaver, \"writestart progress write writeend\".split(\" \"));\n\t\t\t\t}\n\t\t\t\t// on any filesys errors revert to saving with object URLs\n\t\t\t\t, fs_error = function() {\n\t\t\t\t\tif ((is_chrome_ios || (force && is_safari)) && view.FileReader) {\n\t\t\t\t\t\t// Safari doesn't allow downloading of blob urls\n\t\t\t\t\t\tvar reader = new FileReader();\n\t\t\t\t\t\treader.onloadend = function() {\n\t\t\t\t\t\t\tvar url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');\n\t\t\t\t\t\t\tvar popup = view.open(url, '_blank');\n\t\t\t\t\t\t\tif(!popup) view.location.href = url;\n\t\t\t\t\t\t\turl=undefined; // release reference before dispatching\n\t\t\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\t\t\tdispatch_all();\n\t\t\t\t\t\t};\n\t\t\t\t\t\treader.readAsDataURL(blob);\n\t\t\t\t\t\tfilesaver.readyState = filesaver.INIT;\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// don't create more object URLs than needed\n\t\t\t\t\tif (!object_url) {\n\t\t\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\t\t}\n\t\t\t\t\tif (force) {\n\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar opened = view.open(object_url, \"_blank\");\n\t\t\t\t\t\tif (!opened) {\n\t\t\t\t\t\t\t// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html\n\t\t\t\t\t\t\tview.location.href = object_url;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t}\n\t\t\t;\n\t\t\tfilesaver.readyState = filesaver.INIT;\n\n\t\t\tif (can_use_save_link) {\n\t\t\t\tobject_url = get_URL().createObjectURL(blob);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tsave_link.href = object_url;\n\t\t\t\t\tsave_link.download = name;\n\t\t\t\t\tclick(save_link);\n\t\t\t\t\tdispatch_all();\n\t\t\t\t\trevoke(object_url);\n\t\t\t\t\tfilesaver.readyState = filesaver.DONE;\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfs_error();\n\t\t}\n\t\t, FS_proto = FileSaver.prototype\n\t\t, saveAs = function(blob, name, no_auto_bom) {\n\t\t\treturn new FileSaver(blob, name || blob.name || \"download\", no_auto_bom);\n\t\t}\n\t;\n\t// IE 10+ (native saveAs)\n\tif (typeof navigator !== \"undefined\" && navigator.msSaveOrOpenBlob) {\n\t\treturn function(blob, name, no_auto_bom) {\n\t\t\tname = name || blob.name || \"download\";\n\n\t\t\tif (!no_auto_bom) {\n\t\t\t\tblob = auto_bom(blob);\n\t\t\t}\n\t\t\treturn navigator.msSaveOrOpenBlob(blob, name);\n\t\t};\n\t}\n\n\tFS_proto.abort = function(){};\n\tFS_proto.readyState = FS_proto.INIT = 0;\n\tFS_proto.WRITING = 1;\n\tFS_proto.DONE = 2;\n\n\tFS_proto.error =\n\tFS_proto.onwritestart =\n\tFS_proto.onprogress =\n\tFS_proto.onwrite =\n\tFS_proto.onabort =\n\tFS_proto.onerror =\n\tFS_proto.onwriteend =\n\t\tnull;\n\n\treturn saveAs;\n}(\n\t   typeof self !== \"undefined\" && self\n\t|| typeof window !== \"undefined\" && window\n\t|| this.content\n));\n// `self` is undefined in Firefox for Android content script context\n// while `this` is nsIContentFrameMessageManager\n// with an attribute `content` that corresponds to the window\n\nif (typeof module !== \"undefined\" && module.exports) {\n  module.exports.saveAs = saveAs;\n} else if ((typeof define !== \"undefined\" && define !== null) && (define.amd !== null)) {\n  define(\"FileSaver.js\", function() {\n    return saveAs;\n  });\n}\n","import { csvFormat } from 'd3';\nimport { saveAs } from 'file-saver/FileSaver';\n\n/**\n * Export selected data to new csv and download\n *\n * @param {string} selection: one of {'brushed', 'marked', 'both'}\n * @param {string} filename:  name of csv file to be downloaded\n * @param {boolean} exportAll:  override selection param and export all data\n */\nconst exportData = (config, ps, flags) =>\n  function({ selection = 'both', filename = null, exportAll = false }) {\n    if (filename === null) {\n      filename = 'parasol_data.csv';\n    }\n\n    // identify data\n    let d = [];\n    if (exportAll) {\n      d = config.data;\n    } else if (selection == 'brushed') {\n      d = config.brushed;\n    } else if (selection == 'marked') {\n      d = config.marked;\n    } else if (selection == 'both') {\n      d = config.selections();\n    } else {\n      throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n    }\n\n    if (d.length > 0) {\n      // format data as csv\n      // NOTE: include assigned data id number?\n      const csv = csvFormat(d, config.vars);\n\n      // create url and download\n      const file = new Blob([csv], { type: 'text/csv' });\n      saveAs(file, filename);\n    } else {\n      throw 'Error: No data selected.';\n    }\n    return this;\n  };\n\nexport default exportData;\n","/**\n * Selections are the collection of all brushed and marked data; reset all or just a subset (brushed or marked)\n *\n * @param {string} selection: One of {'brushed', 'marked', 'both'} keywords as string\n *\n * NOTE: if linked charts exist, only those are affected\n */\nconst resetSelections = (config, ps, flags) => selection => {\n  if (selection == 'brushed') {\n    ps.brushReset();\n  } else if (selection == 'marked') {\n    ps.unmark();\n  } else if (selection == 'both') {\n    ps.brushReset();\n    ps.unmark();\n  } else {\n    throw \"Please specify one of {'brushed', 'marked', 'both'}\";\n  }\n};\n\nexport default resetSelections;\n","// parcoords wrapper: set foreground alpha on all charts\nconst alpha = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.alpha(d));\n    return this;\n  };\nexport default alpha;\n","// parcoords wrapper: set polyline hex color on all charts\nconst color = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.color(d));\n    return this;\n  };\nexport default color;\n","// parcoords wrapper: set foreground alpha when brushes exist\nconst alphaOnBrushed = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.alphaOnBrushed(d));\n    return this;\n  };\nexport default alphaOnBrushed;\n","// parcoords wrapper: set hex color of polylines within brush extents\nconst brushedColor = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.brushedColor(d));\n    return this;\n  };\nexport default brushedColor;\n","// parcoords wrapper: enable reordering on all charts\n\n// const reorderable = (config, ps, flags) =>\n//   function({ chartIDs=[...Array(ps.charts.length).keys()] }={}) {\n//     ps.charts.forEach( (pc, i) => {\n//       if (chartIDs.includes(i)) {\n//         pc\n//           .reorderable()\n//           .hideAxis(config.partition[i])\n//           .render()\n//           .updateAxes(0);\n//       }\n//     });\n//     return this;\n//   }\n// export default reorderable;\n\nconst reorderable = (config, ps, flags) =>\n  function() {\n    ps.charts.forEach(pc => pc.reorderable());\n    return this;\n  };\nexport default reorderable;\n","// parcoords wrapper: set composite mode on all charts\nconst composite = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.composite(d));\n    return this;\n  };\nexport default composite;\n","// parcoords wrapper: enable shadows on all charts\nconst shadows = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.shadows(d));\n    return this;\n  };\nexport default shadows;\n","// parcoords wrapper: mark a data element\nconst mark = (config, ps, flags) => d => {\n  ps.charts.forEach(pc => pc.mark(d));\n};\nexport default mark;\n","// parcoords wrapper: highlight a data element\nconst highlight = (config, ps, flags) => d => {\n  ps.charts.forEach(pc => pc.highlight(d));\n};\nexport default highlight;\n","// parcoords wrapper: format dimensions \nconst dimensions = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.dimensions(d));\n    return this;\n  };\nexport default dimensions;\n","// parcoords wrapper: flip listed axes on all charts\nconst flipAxes = (config, ps, flags) =>\n  function(axes) {\n    ps.charts.forEach(pc => pc.flipAxes(axes));\n    return this;\n  };\nexport default flipAxes;\n","// parcoords wrapper: set the domain (and scale?) of a single axis on all charts\nconst scale = (config, ps, flags) =>\n  function(axis, domain) {\n    const range = ps.charts[0].dimensions()[axis].yscale.domain();\n    if (range[0] >= domain[0] && range[1] <= domain[1]) {\n      ps.charts.forEach(pc => pc.scale(axis, domain));\n    } else {\n      throw Error('Domain Error: specified domain must exceed axis extrema.');\n    }\n    return this;\n  };\nexport default scale;\n","// parcoords wrapper: set bundle dimension on all charts\nconst bundleDimension = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.bundleDimension(d));\n    return this;\n  };\nexport default bundleDimension;\n","// parcoords wrapper: set bundling strength on all charts\nconst bundlingStrength = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.bundlingStrength(d));\n    return this;\n  };\nexport default bundlingStrength;\n","// parcoords wrapper: set bundling smoothness on all charts\nconst smoothness = (config, ps, flags) =>\n  function(d) {\n    ps.charts.forEach(pc => pc.smoothness(d));\n    return this;\n  };\nexport default smoothness;\n","// parcoords wrapper: render and update charts, maintain config\nconst render = (config, ps, flags) =>\n  function() {\n    ps.charts.forEach((pc, i) => {\n      pc.hideAxis(config.partition[i])\n        .render()\n        .updateAxes(0);\n    });\n    return this;\n  };\nexport default render;\n","// parcoords wrapper: reset all brushes and preform necessary updates\nconst brushReset = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.brushReset());\n\n  // NOTE: brushed data in config is updated by sync() as consequence of pc.brushReset()\n  // currently need to force due to issue with ParCoords.selected() returning entire dataset if brush extents are empty\n  config.brushed = [];\n\n  if (flags.grid) {\n    ps.gridUpdate();\n  }\n};\n\nexport default brushReset;\n","// parcoords wrapper: reset all marks and preform necessary updates\nconst unmark = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.unmark());\n  config.marked = [];\n  if (flags.grid) {\n    config.grid.setSelectedRows([]);\n    ps.gridUpdate();\n  }\n};\n\nexport default unmark;\n","// parcoords wrapper: reset all highlights\nconst unhighlight = (config, ps, flags) => () => {\n  ps.charts.forEach(pc => pc.unhighlight());\n};\nexport default unhighlight;\n","import { union } from 'lodash-es';\n\nconst DefaultConfig = {\n  dataView: false,\n  grid: false,\n  chartOptions: {}, // parcoords options, applies to all charts\n  brushed: [], // intersection of all brushed data in linked charts\n  marked: [], // union of all marked data in linked charts\n  selections: function() {\n    return union(this.brushed, this.marked);\n  },\n};\n\nexport default DefaultConfig;\n","import { entries, keys, dispatch } from 'd3';\n\nimport DefaultConfig from './defaultConfig';\nimport format_data from '../util/format_data';\n\nconst initState = (data, userConfig) => {\n  const config = Object.assign({}, DefaultConfig, userConfig);\n  // force attributes for consistent operation\n  config.data = data;\n  config.vars = Object.keys(data[0]); // does not contain 'id'\n  config.partition = {}; // { chart id: [hidden vars]} built in init.js\n\n  // assign each data element an ID for slickgrid and other analyses\n  config.data.forEach((d, i) => {\n    d.id = d.id || i;\n  });\n  config.data = format_data(config.data);\n\n  // NOTE: \"id\" col hidden globally by default in init.js\n\n  const eventTypes = [\n    // 'data', // when data in a chart is updated, how should this cascade to linked?\n    // 'render',\n    // 'resize',\n    // 'highlight',\n    // 'mark',\n    'brush',\n    'brushend',\n    'brushstart',\n    // 'axesreorder',\n  ].concat(keys(config));\n\n  const events = dispatch.apply(this, eventTypes),\n    flags = {\n      linked: false,\n      grid: false,\n      // axes: false,\n      // interactive: false,\n      // debug: false,\n    };\n  // xscale = scalePoint(),\n  // dragging = {},\n  // axis = axisLeft().ticks(5),\n  // ctx = {},\n  // canvas = {};\n\n  return {\n    config,\n    events,\n    eventTypes,\n    flags,\n  };\n};\n\nexport default initState;\n","//css\nimport './parallel-coordinates.css';\n\n//api\nimport init from './api/init';\nimport attachGrid from './api/attachGrid';\nimport gridUpdate from './api/gridUpdate';\nimport linked from './api/linked';\nimport cluster from './api/cluster';\nimport weightedSum from './api/weightedSum';\nimport hideAxes from './api/hideAxes';\nimport showAxes from './api/showAxes';\nimport setAxesLayout from './api/setAxesLayout';\nimport keepData from './api/keepData';\nimport removeData from './api/removeData';\nimport exportData from './api/exportData';\nimport resetSelections from './api/resetSelections';\n\n// parcoords wrappers\nimport alpha from './wrap/alpha';\nimport color from './wrap/color';\nimport alphaOnBrushed from './wrap/alphaOnBrushed';\nimport brushedColor from './wrap/brushedColor';\nimport reorderable from './wrap/reorderable';\nimport composite from './wrap/composite';\nimport shadows from './wrap/shadows';\nimport mark from './wrap/mark';\nimport highlight from './wrap/highlight';\nimport dimensions from './wrap/dimensions';\nimport flipAxes from './wrap/flipAxes';\nimport scale from './wrap/scale';\nimport bundleDimension from './wrap/bundleDimension';\nimport bundlingStrength from './wrap/bundlingStrength';\nimport smoothness from './wrap/smoothness';\nimport render from './wrap/render';\nimport brushReset from './wrap/brushReset';\nimport unmark from './wrap/unmark';\nimport unhighlight from './wrap/unhighlight';\n\nimport initState from './state/initState';\n// import bindEvents from './bindEvents';\nimport { version } from '../package.json';\n\nconst Parasol = (data, userConfig) => {\n  const state = initState(data, userConfig);\n  const { config, events, flags } = state;\n\n  const ps = init(config);\n\n  // bindEvents();\n\n  // expose the state of charts and grid\n  ps.state = config;\n  ps.flags = flags;\n  ps.version = version;\n  ps.grid = config.grid;\n  ps.dataview = config.dataview;\n\n  ps.attachGrid = attachGrid(config, ps, flags);\n  ps.gridUpdate = gridUpdate(config, ps, flags);\n  ps.linked = linked(config, ps, flags);\n  ps.cluster = cluster(config, ps, flags);\n  ps.weightedSum = weightedSum(config, ps, flags);\n  ps.hideAxes = hideAxes(config, ps, flags);\n  ps.showAxes = showAxes(config, ps, flags);\n  ps.setAxesLayout = setAxesLayout(config, ps, flags);\n  ps.keepData = keepData(config, ps, flags);\n  ps.removeData = removeData(config, ps, flags);\n  ps.exportData = exportData(config, ps, flags);\n  ps.resetSelections = resetSelections(config, ps, flags);\n\n  // parcoords methods (apply to all charts)\n  ps.alpha = alpha(config, ps, flags);\n  ps.color = color(config, ps, flags);\n  ps.alphaOnBrushed = alphaOnBrushed(config, ps, flags);\n  ps.brushedColor = brushedColor(config, ps, flags);\n  ps.reorderable = reorderable(config, ps, flags);\n  ps.composite = composite(config, ps, flags);\n  ps.shadows = shadows(config, ps, flags);\n  ps.mark = mark(config, ps, flags);\n  ps.highlight = highlight(config, ps, flags);\n  ps.dimensions = dimensions(config, ps, flags);\n  ps.scale = scale(config, ps, flags);\n  ps.flipAxes = flipAxes(config, ps, flags);\n  ps.bundleDimension = bundleDimension(config, ps, flags);\n  ps.bundlingStrength = bundlingStrength(config, ps, flags);\n  ps.smoothness = smoothness(config, ps, flags);\n  ps.render = render(config, ps, flags);\n  ps.brushReset = brushReset(config, ps, flags);\n  ps.unmark = unmark(config, ps, flags);\n  ps.unhighlight = unhighlight(config, ps, flags);\n\n  return ps;\n};\n\nexport default Parasol;\n"],"names":["init","ps","selection","selectAll","charts","each","d","i","ParCoords","config","chartOptions","data","hideAxis","alpha","render","mode","brushMode","partition","as_float","converted","parseFloat","x","isNaN","attachGrid","flags","container","columns","options","grid","checkboxSelector","SlickGrid","Plugins","CheckboxSelectColumn","cssClass","column_keys","vars","difference","unshift","map","key","id","name","field","sortable","getColumnDefinition","enableCellNavigation","enableColumnReorder","multiColumnSort","editable","asyncEditorLoading","autoEdit","dataView","Data","DataView","setItems","Grid","setSelectionModel","RowSelectionModel","selectActiveRow","registerPlugin","onRowCountChanged","subscribe","e","args","updateRowCount","onRowsChanged","invalidateRows","rows","syncGridSelection","sortcol","c","shift","sortdir","comparer","a","b","y","onSort","sortAsc","sortCol","sort","gridUpdate","setColumns","selections","length","marked","union","beginUpdate","endUpdate","sync","brush_extents","linked","forEach","push","pc","selected","brushReset","brushed","intersection","chartIDs","Array","keys","Number","j","on","onMouseEnter","getCellFromEvent","row","getItems","highlight","onMouseLeave","unhighlight","onSelectedRowsChanged","selected_row_ids","getSelectedRows","unmark","mark","array_to_object","reduce","acc","obj","Object","k","concat","object_to_array","df","result","entries","values","val","toString","arr","max","array","Math","apply","min","range","extents","sum","num","l","mean","variance","pow","standardDeviation","sqrt","zScores","norms","standardize","format_data","csvParse","csvFormat","add_column","col_name","names","col","includes","col_def","cluster","displayIDs","palette","schemeCategory10","std","hidden","isArray","scheme","scaleOrdinal","cluster_vars","v","target","value","kmeans","clusters","createAxes","color","updateAxes","cols","getColumns","normalize","weightedSum","weights","norm","row_totals","d_weight","score","hideAxes","isPlainObject","chartID","showAxes","setAxesLayout","layout","keepData","resetSelections","default","removeData","saveAs","view","navigator","test","userAgent","doc","document","get_URL","URL","webkitURL","save_link","createElementNS","can_use_save_link","click","node","event","MouseEvent","dispatchEvent","is_safari","HTMLElement","safari","is_chrome_ios","throw_outside","ex","setImmediate","setTimeout","force_saveable_type","arbitrary_revoke_timeout","revoke","file","revoker","revokeObjectURL","remove","dispatch","filesaver","event_types","listener","call","auto_bom","blob","type","Blob","String","fromCharCode","FileSaver","no_auto_bom","force","object_url","dispatch_all","split","fs_error","FileReader","reader","onloadend","url","replace","popup","open","location","href","undefined","readyState","DONE","readAsDataURL","INIT","createObjectURL","opened","download","FS_proto","prototype","msSaveOrOpenBlob","abort","WRITING","error","onwritestart","onprogress","onwrite","onabort","onerror","onwriteend","self","window","this","content","module","exports","exportData","filename","exportAll","csv","alphaOnBrushed","brushedColor","reorderable","composite","shadows","dimensions","flipAxes","axes","scale","axis","domain","yscale","Error","bundleDimension","bundlingStrength","smoothness","setSelectedRows","DefaultConfig","initState","userConfig","assign","eventTypes","events","Parasol","state","version","dataview"],"mappings":"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"}